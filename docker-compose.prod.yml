version: '3.8'
services:
  api:
    image: ${DOCKERHUB_USERNAME}/my-image-name:latest
    container_name: build-route-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - VALKEY_HOST=${VALKEY_HOST}
      - VALKEY_PORT=${VALKEY_PORT}
      - VALKEY_PASSWORD=${VALKEY_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=your_redis_password_here
    depends_on:
      - redis
    networks:
      - app-network

  united-microservice:
    image: ${DOCKERHUB_USERNAME}/my-image-name:latest
    container_name: united-microservice
    restart: unless-stopped
    ports:
      - "4004:4004"
    environment:
      - NODE_ENV=production
      - PROXY_HOST=${PROXY_HOST}
      - PROXY_PORT=${PROXY_PORT}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=your_redis_password_here
    volumes:
      - ./united-microservice:/app/united-microservice
      - ./arkalis:/app/arkalis
    working_dir: /app
    command: npx tsx united-microservice/united-service.ts
    depends_on:
      - redis
    networks:
      - app-network

  # Production Redis - Hardcoded for self-hosted VPS
  redis:
    image: redis:7-alpine
    container_name: app-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    command: ["redis-server", "--requirepass", "your_redis_password_here"]
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # Valkey (separate service - DO NOT CHANGE)
  valkey:
    image: redis:7-alpine
    container_name: valkey
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${VALKEY_PASSWORD}"]
    volumes:
      - valkey_data:/data
    networks:
      - app-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - app-network

volumes:
  redis_data:
    driver: local
  valkey_data:
    driver: local

networks:
  app-network:
    driver: bridge 