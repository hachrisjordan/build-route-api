version: '3.8'

services:
  api:
    build: .
    container_name: my-app-container
    restart: unless-stopped
    ports:
      - "8080:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BASE_URL=http://localhost:3000
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - VALKEY_HOST=${VALKEY_HOST}
      - VALKEY_PORT=${VALKEY_PORT}
      - VALKEY_PASSWORD=${VALKEY_PASSWORD}
      - PROXY_HOST=${PROXY_HOST}
      - PROXY_PORT=${PROXY_PORT}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    depends_on:
      - redis
    networks:
      - app-network

  united-microservice:
    build: .
    container_name: united-microservice
    restart: unless-stopped
    ports:
      - "4004:4004"
    environment:
      - NODE_ENV=production
      - PROXY_HOST=${PROXY_HOST}
      - PROXY_PORT=${PROXY_PORT}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    volumes:
      - ./united-microservice:/app/united-microservice
      - ./arkalis:/app/arkalis
    working_dir: /app
    command: npx tsx united-microservice/united-service.ts
    depends_on:
      - redis
    networks:
      - app-network

  jetblue-microservice:
    build: .
    container_name: jetblue-microservice
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PROXY_HOST=${PROXY_HOST}
      - PROXY_PORT=${PROXY_PORT}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
    volumes:
      - ./jetblue-microservice:/app/jetblue-microservice
    working_dir: /app
    command: node jetblue-microservice/jetblue-service.js
    networks:
      - app-network

  alaska-microservice:
    build: .
    container_name: alaska-microservice
    restart: unless-stopped
    ports:
      - "4001:4001"
    environment:
      - NODE_ENV=production
      - PROXY_HOST=${PROXY_HOST}
      - PROXY_PORT=${PROXY_PORT}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
    volumes:
      - ./alaska-microservice:/app/alaska-microservice
    working_dir: /app
    command: node alaska-microservice/alaska-service.js
    networks:
      - app-network

  american-microservice:
    build: .
    container_name: american-microservice
    restart: unless-stopped
    ports:
      - "4002:4002"
    environment:
      - NODE_ENV=production
      - PROXY_HOST=${PROXY_HOST}
      - PROXY_PORT=${PROXY_PORT}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
    volumes:
      - ./american-microservice:/app/american-microservice
    working_dir: /app
    command: node american-microservice/american-service.js
    networks:
      - app-network

  finnair-microservice:
    build: .
    container_name: finnair-microservice
    restart: unless-stopped
    ports:
      - "4003:4003"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - PROXY_HOST=${PROXY_HOST}
      - PROXY_PORT=${PROXY_PORT}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
      - CHROME_BIN=/usr/bin/chromium-browser
      - CHROMEDRIVER_PATH=/usr/bin/chromedriver
      - CHROME_DATA_DIR=/app/chrome-data
      - DISPLAY=:99
    volumes:
      - ./finnair-microservice:/app/finnair-microservice
      - ./finnair_cookies.json:/app/finnair_cookies.json:ro
      - chrome_data:/app/chrome-data
    working_dir: /app
    command: /app/finnair-microservice/docker-start.sh
    networks:
      - app-network

  delta-microservice:
    build: .
    container_name: delta-microservice
    restart: unless-stopped
    ports:
      - "4005:4005"
    environment:
      - NODE_ENV=production
      - PROXY_HOST=${PROXY_HOST}
      - PROXY_PORT=${PROXY_PORT}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    volumes:
      - ./delta-microservice:/app/delta-microservice
    working_dir: /app
    command: node delta-microservice/delta-service.js
    depends_on:
      - redis
    networks:
      - app-network

  # Production Redis - Hardcoded for self-hosted VPS
  redis:
    image: redis:7-alpine
    container_name: app-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    command: ["redis-server", "--requirepass", "your_redis_password_here"]
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # Valkey (separate service - DO NOT CHANGE)
  valkey:
    image: redis:7-alpine
    container_name: valkey
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${VALKEY_PASSWORD}"]
    volumes:
      - valkey_data:/data
    networks:
      - app-network

  # Shared Chrome service for undetected-chromedriver
  chrome-service:
    build: .
    container_name: chrome-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DISPLAY=:99
      - CHROME_BIN=/usr/bin/chromium-browser
      - CHROMEDRIVER_PATH=/usr/bin/chromedriver
      - CHROME_DATA_DIR=/app/chrome-data
    volumes:
      - chrome_data:/app/chrome-data
    working_dir: /app
    command: >
      sh -c "
        Xvfb :99 -screen 0 1920x1080x24 &
        export DISPLAY=:99 &&
        tail -f /dev/null
      "
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
  valkey_data:
  chrome_data: 